name: Update and Package Textweaver

on:
  push:
    branches:
      - main  # or the branch you work on

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9  # or your desired version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -e .  # This installs your package in an editable mode


    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1

    - name: Retrieve Cognito User ID Token
      run: |
        aws sts get-caller-identity
        TOKEN=$(aws cognito-idp admin-initiate-auth --region us-east-1 --user-pool-id us-east-1_6HZihsFMW --client-id 1difj1ec8einmv53fpmmbsu8s1 --auth-flow ADMIN_NO_SRP_AUTH --auth-parameters USERNAME=testuser@example.com,PASSWORD=password --query AuthenticationResult.IdToken --output text)
        echo "BEARER_TOKEN=$TOKEN" >> $GITHUB_ENV

    - name: Test with PyTest
      run: |
        pytest ./tests

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Build and publish
      env:
        TWINE_USERNAME: __token__  # Using PyPI token
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}  # This uses your stored secret token
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        python setup.py sdist bdist_wheel
        twine upload dist/*