name: Update and Package Textweaver

on:
  push:
    branches:
      - main  # or the branch you work on

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Development  # specify the environment name here
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9  # or your desired version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -e .  # This installs your package in an editable mode

    - name: Install ffmpeg
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ffmpeg

    - name: Test with PyTest
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
        AWS_DEFAULT_OUTPUT: json
        PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
        AWS_COGNITO_REGION: ${{ vars.AWS_COGNITO_REGION }}
        AWS_USER_POOL_CLIENT_ID: ${{ vars.AWS_USER_POOL_CLIENT_ID }}
        AWS_USER_POOL_ID: ${{ vars.AWS_USER_POOL_ID }}
        HOST_IP: ${{ vars.HOST_IP }}
        MODEL_PATH: ${{ vars.MODEL_PATH }}
        PINECONE_ENVIRONMENT: ${{ vars.PINECONE_ENVIRONMENT }}
        PINECONE_INDEX_NAME: ${{ vars.PINECONE_INDEX_NAME }}
        PINECONE_USER_INDEX_NAME: ${{ vars.PINECONE_USER_INDEX_NAME }}
        PORT: ${{ vars.PORT }}
        SNS_TOPIC_NAME: ${{ vars.SNS_TOPIC_NAME }}
      run: |
        TOKEN=$(aws cognito-idp admin-initiate-auth --region us-east-1 --user-pool-id us-east-1_6HZihsFMW --client-id 1difj1ec8einmv53fpmmbsu8s1 --auth-flow ADMIN_NO_SRP_AUTH --auth-parameters USERNAME=testuser@example.com,PASSWORD=password --query AuthenticationResult.IdToken --output text)
        echo "BEARER_TOKEN=$TOKEN" >> $GITHUB_ENV
        pytest ./tests

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Build and publish
      env:
        TWINE_USERNAME: __token__  # Using PyPI token
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}  # This uses your stored secret token
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        python setup.py sdist bdist_wheel
        twine upload dist/*